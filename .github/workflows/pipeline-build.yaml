name: GOAT Compile
 
on:
  push:
    branches:
      - main
 
jobs:
  integration:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
 
    steps:
      - name: "Obteniendo ultima version del codigo"
        uses: actions/checkout@v3
 
      - name: "Instalacion Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
 

      - name: "Compilacion"
        run: ./mvnw clean install
 
      - name: "Verificar paquete"
        run: ls -ltra target

  sca:
    runs-on: ubuntu-latest
    steps: 
      - name: "Obteniendo version"
        uses: actions/checkout@v2

      - name: "Instalacion de Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: "Instalar python"
        uses: actions/setup-python@v4
        with:
          python-version: 3.8 

      - name: "Actualizar dep de python"
        run: |
              pip3 install requests
              
      - name: "Compilacion 2"
        run: ./mvnw clean install

      - name: "Dependency Check"
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: Depcheck
        with:
          project: 'WebGoat'
          path: '.'
          format: 'XML'
          out: 'reportsDC'

      # - name: "Subir SARIF"
      #   uses: github/codeql-action/upload-sarif@v2        
      #   with:              
      #     sarif_file: ${{github.workspace}}/reports
      #     checkout_path: ${{github.workspace}}/reports
 
      - name: "Verificar reporte"
        run: ls -ltra reports

      # - name: "Horusec"
      #   run: curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest-beta
 
      - name: "Subir Dep-Check scan a DefectDojo"
        run: |
              python3 upload-report.py --file reportsDC/dependency-check-report.xml --type-scan 'Dependency Check Scan'

      - name: Contenedor Docker
        run: |
          docker build -t prueba .
          docker images
          docker run --name webgoat -d -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 prueba
          docker ps -a

      - name: Acuasecurity
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb
          sudo dpkg -i trivy_0.18.3_Linux-64bit.deb
        

      - name: Escaneo de Vulnerabilidades con Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'prueba'
          timeout: 10m0s
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          scanners: vuln,secret,config
          format: 'json'
          output: 'trivy-results.json'
        continue-on-error: true

      - name: "Subir Trivy scan a DefectDojo"
        run: |
              python3 upload-report.py --file trivy-results.json --type-scan 'Trivy Scan' 

      # - name: Upload Trivy scan results to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: 'trivy-results.sarif'
      #     category: 'code'

      - name: Arachni
        run: |
          wget https://github.com/Arachni/arachni/releases/download/v1.6.1.3/arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
          tar -xvf arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
          ip=$(docker inspect webgoat | grep "IPAddress" | xargs | cut -d ',' -f 2 | awk '{print $2}')
          ./arachni-1.6.1.3-0.6.1.1/bin/arachni --check=* http://$ip:8080/WebGoat/login
      
      - name: Parando y eliminando contenedor
        run: |
          docker container stop webgoat
          docker container rm webgoat


