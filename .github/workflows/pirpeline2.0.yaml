name: Aws
 
on:
  push:
    branches:
      - main
 
jobs:
  integration:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
 
    steps:
      - name: "Obteniendo ultima version del codigo"
        uses: actions/checkout@v3
 
      - name: "Instalacion Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
 
      - name: "Compilacion"
        run: ./mvnw clean install
 
      - name: "Verificar paquete"
        run: ls -ltra target

      - name: Contenedor Docker
        run: |
          docker build -t prueba .
          docker images
          docker run --name webgoat -it -d -p 8080:8080 -p 9090:9090 prueba

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Cargar imagen a ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/w2f1o6m8
          docker tag prueba:latest public.ecr.aws/w2f1o6m8/omar-repo-aws:latest
          docker push public.ecr.aws/w2f1o6m8/omar-repo-aws:latest

      - name: Aprovisionamiento de Terraform
        run: |
          cd Terraform/
          terraform init 
          terraform validate
          terraform plan -out tfplan
          terraform apply tfplan >> tfplan.txt
          ip_terra=$( cat tfplan.txt | grep My_ip | xargs | cut -d '=' -f 2)
          sed -i "s/IP/$ip_terra/g" ../Ansible/inventario          
          

      - name: Ejecutar Ansible 
        env: 
          PRIVATE_KEY: ${{secrets.VILLALOBOS}}
        run: |
          sudo apt install ansible -y
          pip3 install "ansible-lint"
          cd Ansible/
          echo "$PRIVATE_KEY" >> $HOME/Villalobos-aws.pem
          sudo chmod 600 $HOME/Villalobos-aws.pem
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook -i inventario server.yml --become --private-key $HOME/Villalobos-aws.pem
        continue-on-error: true

